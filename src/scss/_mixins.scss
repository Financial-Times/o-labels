
@mixin oLabelBase() {
	.o-label {
		@include oTypographySans($scale: _oLabelGet('font-scale'), $line-height: 1em);
		font-weight: 500;
		text-align: center;
		display: inline-block;
		box-sizing: border-box;
		margin: 0;
		text-decoration: none;
		padding: (_oLabelGet('padding-vertical') - _oLabelGet('border-width')) (_oLabelGet('padding-horizontal') - _oLabelGet('border-width'));
		color: _oLabelGet('text-color');
		background-color: _oLabelGet('background-color');
		border: solid _oLabelGet('border-width') transparent;
	}
}

@mixin oLabelSize($size) {
	.o-label--#{$size} {
		// We use the scale and set font size manually to rely on the cascade rather
		// than repeating the font family and line height from the main label class
		@if _oLabelGet('font-scale', $size) {
			// TODO is there a nicer way to get this number?
			font-size: nth(oTypographyGetScale(_oLabelGet('font-scale', $size)), 1) * 1px;
		}
		padding: (_oLabelGet('padding-vertical', $size) - _oLabelGet('border-width')) (_oLabelGet('padding-horizontal', $size) - _oLabelGet('border-width'));
		text-transform: _oLabelGet('text-transform', $size);
	}
}

@mixin oLabelState($state-name, $variant: null) {

	// If we have a custom config, we use that instead of one of the
	// preconfigured states
	$variant: if($variant, $variant, $state-name);

	.o-label--#{$state-name} {
		background-color: _oLabelGet('background-color', $variant);
		border-color: _oLabelGet('border-color', $variant);

		// Set text colour or calculate based on background
		@if _oLabelGet('text-color', $variant) {
			color: _oLabelGet('text-color', $variant);
		} @else {
			color: oColorsGetTextColor(_oLabelGet('background-color', $variant), 100);
		}
	}
}
